services:
  web:
    build: .
    container_name: flask_app
    command: flask run --host=0.0.0.0 --port=5000 --reload
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - FLASK_APP=backend/app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/car_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  db:
    image: postgres:15
    container_name: pg_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: car_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
    container_name: celery_worker
    command: celery -A backend.tasks.celery worker --loglevel=info
    depends_on:
      - web
      - redis
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/car_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery_beat:
    build:
      context: .
    container_name: celery_beat
    command: celery -A backend.tasks.celery beat --loglevel=info
    depends_on:
      - web
      - redis
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/car_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

volumes:
  postgres_data:
